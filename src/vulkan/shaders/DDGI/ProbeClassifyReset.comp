//////////////////////////////////////////////////////////////////////////////
// This file is part of the Maple Engine                              		//
//////////////////////////////////////////////////////////////////////////////
#version 450

#extension GL_GOOGLE_include_directive : require
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int8 : enable
#include "DDGICommon.glsl"

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, scalar) buffer ProbeState
{
    int8_t probeStates[];
};//we can also use bit to do so.. later..

layout(set = 0, binding = 1, scalar)  uniform DDGIUBO
{
    DDGIUniform ddgi; 
};


void main()
{
    uint probeIndex = gl_GlobalInvocationID.x;
    uint numProbes = (ddgi.probeCounts.x * ddgi.probeCounts.y * ddgi.probeCounts.z);
    
    if(probeIndex >= numProbes)
        return;

    probeStates[probeIndex] = int8_t(DDGI_PROBE_STATE_ACTIVE);
}